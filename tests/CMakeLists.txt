get_property(enabled_languages GLOBAL PROPERTY ENABLED_LANGUAGES)

if("${CMAKE_C_COMPILER_ID}" MATCHES "MSVC")
  foreach(v /W4 /sdl)
    string_append(CMAKE_C_FLAGS ${v})
    string_append(CMAKE_CXX_FLAGS ${v})
  endforeach()
else()
  foreach(v -Wall -Wextra -Wpedantic)
    string_append(CMAKE_C_FLAGS ${v})
    string_append(CMAKE_CXX_FLAGS ${v})
  endforeach()
endif()
foreach(v ${C_FLAGS})
  string_append(CMAKE_C_FLAGS ${v})
endforeach()
foreach(v ${CXX_FLAGS})
  string_append(CMAKE_CXX_FLAGS ${v})
endforeach()
if(ENABLED_IPO)
  set(CMAKE_INTERPROCEDURAL_OPTIMIZATION ON)
endif()
foreach(lang ${enabled_languages})
  if(ENABLE_IYWU AND INCLUDE_WHAT_YOU_USE)
    set(CMAKE_${lang}_INCLUDE_WHAT_YOU_USE ${INCLUDE_WHAT_YOU_USE})
  endif()
  if(ENABLE_CLANG_TIDY AND CLANG_TIDY)
    set(CMAKE_${lang}_CLANG_TIDY ${CLANG_TIDY} --fix)
  endif()
  if(ENABLE_CPPCHECK AND CPPCHECK)
    set(CMAKE_${lang}_CPPCHECK ${CPPCHECK} --enable=warning,performance)
  endif()
  if(CMAKE_${lang}_LINK_OPTIONS_NO_PIE AND NOT ANDROID)
    string_append(CMAKE_${lang}_LINK_FLAGS ${CMAKE_${lang}_LINK_OPTIONS_NO_PIE})
  endif()
endforeach()

include(FindThreads)

if(CMAKE_CXX_COMPILER AND CXX IN_LIST enabled_languages)
  add_executable(test-${PROJECT_NAME} ${PROJECT_NAME}.cc)
  set_target_properties(test-${PROJECT_NAME} PROPERTIES OUTPUT_NAME ${PROJECT_NAME})
  target_link_libraries(test-${PROJECT_NAME} ${PROJECT_NAME})
  if(UNIX)
    target_link_libraries(test-${PROJECT_NAME} ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT})
  endif()
  add_test(NAME test-${PROJECT_NAME} COMMAND ${PROJECT_NAME} 1001)

  add_executable(test-stimeslice stimeslice.cc)
  set_target_properties(test-stimeslice PROPERTIES OUTPUT_NAME stimeslice)
  target_link_libraries(test-stimeslice ${PROJECT_NAME})
  if(UNIX)
    target_link_libraries(test-stimeslice ${CMAKE_DL_LIBS} ${CMAKE_THREAD_LIBS_INIT})
  endif()
  add_test(NAME test-stimeslice COMMAND stimeslice 1001)
endif()
